// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  /// 使用者唯一識別碼
  id        String   @id @default(uuid())
  /// 使用者名稱，用於登入
  username  String   @unique
  /// 電子郵件地址，用於通知和找回密碼
  email     String   @unique
  /// 加密後的密碼
  password  String
  /// 使用者頭像圖片路徑
  avatar    String?
  /// 帳號是否啟用
  isActive  Boolean  @default(true)
  /// 帳號創建時間
  createdAt DateTime @default(now())
  /// 最後更新時間
  updatedAt DateTime @updatedAt

  // RBAC 關聯
  userRoles UserRole[]

  // 專案關聯
  createdProjects Project[] @relation("CreatedProjects")
  updatedProjects Project[] @relation("UpdatedProjects")

  // 工作流程關聯
  createdWorkflows         Workflow[]         @relation("CreatedWorkflows")
  updatedWorkflows         Workflow[]         @relation("UpdatedWorkflows")
  createdWorkflowTemplates WorkflowTemplate[] @relation("CreatedWorkflowTemplates")
  createdWorkflowInstances WorkflowInstance[] @relation("CreatedWorkflowInstances")
  uploadedFiles            FileNode[]         @relation("UploadedFiles")

  // 新增關聯
  createdFlowNodeDefinitions FlowNodeDefinition[] @relation("CreatedFlowNodeDefinitions")
  updatedFlowNodeDefinitions FlowNodeDefinition[] @relation("UpdatedFlowNodeDefinitions")

  // 新增關聯
  createdSystemCodes SystemCode[] @relation("CreatedSystemCodes")
  updatedSystemCodes SystemCode[] @relation("UpdatedSystemCodes")

  // 新增 Flow 相關關聯
  createdFlowTemplates FlowTemplate[] @relation("CreatedFlowTemplates")
  updatedFlowTemplates FlowTemplate[] @relation("UpdatedFlowTemplates")
  createdFlowInstances FlowInstance[] @relation("CreatedFlowInstances")
  updatedFlowInstances FlowInstance[] @relation("UpdatedFlowInstances")
  createdFlowDocuments FlowDocument[] @relation("CreatedFlowDocuments")

  @@index([email])
  @@map("User")
}

model Permission {
  /// 權限唯一識別碼
  id          String   @id @default(uuid())
  /// 權限名稱，如 CREATE_PROJECT、MANAGE_USERS
  name        String   @unique
  /// 權限描述
  description String?
  /// 創建時間
  createdAt   DateTime @default(now())
  /// 最後更新時間
  updatedAt   DateTime @updatedAt

  // RBAC 關聯
  rolePermissions RolePermission[]

  @@map("Permission")
}

model Role {
  /// 角色唯一識別碼
  id          String   @id @default(uuid())
  /// 角色名稱，如 ADMIN、USER、MANAGER
  name        String   @unique
  /// 角色描述
  description String?
  /// 創建時間
  createdAt   DateTime @default(now())
  /// 最後更新時間
  updatedAt   DateTime @updatedAt

  // RBAC 關聯
  userRoles       UserRole[]
  rolePermissions RolePermission[]

  @@map("Role")
}

model UserRole {
  /// 使用者角色關聯唯一識別碼
  id        String   @id @default(uuid())
  /// 使用者ID
  userId    String
  /// 角色ID
  roleId    String
  /// 創建時間
  createdAt DateTime @default(now())
  /// 最後更新時間
  updatedAt DateTime @updatedAt

  // 關聯
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  role Role @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@unique([userId, roleId])
  @@map("UserRole")
}

model RolePermission {
  /// 角色權限關聯唯一識別碼
  id           String   @id @default(uuid())
  /// 角色ID
  roleId       String
  /// 權限ID
  permissionId String
  /// 創建時間
  createdAt    DateTime @default(now())
  /// 最後更新時間
  updatedAt    DateTime @updatedAt

  // 關聯
  role       Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permission Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)

  @@unique([roleId, permissionId])
  @@map("RolePermission")
}

model Project {
  /// 專案唯一識別碼
  id            String   @id @default(uuid())
  /// 專案編號（自動生成，格式：systemCode_YYYYMMDD_HHMMSS_XXXXX）
  projectNumber String   @unique
  /// 系統代碼
  systemCode    String
  /// 專案名稱
  name          String
  /// 專案描述
  description   String?
  /// 專案狀態（draft、active、completed、archived）
  status        String   @default("draft")
  /// 創建者ID
  createdBy     String
  /// 最後更新者ID
  updatedBy     String
  /// 創建時間
  createdAt     DateTime @default(now())
  /// 最後更新時間
  updatedAt     DateTime @updatedAt

  // 關聯
  creator           User               @relation("CreatedProjects", fields: [createdBy], references: [id])
  updater           User               @relation("UpdatedProjects", fields: [updatedBy], references: [id])
  workflowInstances WorkflowInstance[]
  FlowInstance      FlowInstance[]
  FlowDocument      FlowDocument[]

  @@map("Project")
}

/// 工作流程模型 !TODO: Remove this model
model Workflow {
  /// 工作流程唯一識別碼
  id          String   @id @default(uuid())
  /// 工作流程名稱
  name        String
  /// 工作流程描述
  description String?
  /// 工作流程狀態（draft、active、completed、archived）
  status      String   @default("draft")
  /// 創建者ID
  createdBy   String
  /// 最後更新者ID
  updatedBy   String
  /// 創建時間
  createdAt   DateTime @default(now())
  /// 最後更新時間
  updatedAt   DateTime @updatedAt

  // 關聯
  files   File[]
  creator User   @relation("CreatedWorkflows", fields: [createdBy], references: [id])
  updater User   @relation("UpdatedWorkflows", fields: [updatedBy], references: [id])

  @@map("Workflow")
}

/// 檔案模型 !TODO: Remove this model
model File {
  /// 檔案唯一識別碼
  id            String   @id @default(uuid())
  /// 檔案名稱（存儲後的名稱）
  fileName      String
  /// 原始檔案名稱
  originalname  String
  /// 檔案存儲路徑
  fileUrl       String
  /// 檔案大小（bytes）
  fileSize      Int
  /// 檔案類型（MIME type）
  fileType      String
  /// 縮圖路徑
  thumbnailPath String?
  /// 關聯的工作流程ID
  workflowId    String?
  /// 檔案狀態（pending、processing、completed、error）
  status        String   @default("pending")
  /// 檔案元數據（JSON字串）
  metadata      String?
  /// 創建時間
  createdAt     DateTime @default(now())
  /// 最後更新時間
  updatedAt     DateTime @updatedAt

  // 關聯
  workflow Workflow? @relation(fields: [workflowId], references: [id])

  @@map("File")
}

model NodeDefinition {
  /// 主鍵
  id            String   @id @default(uuid())
  /// 節點定義鍵值
  definitionKey String   @unique
  /// 節點類型（custom-input | custom-process | statistic-process）
  nodeType      String   @default("custom-process")
  /// 業務分類
  category      String
  /// 節點名稱（必填）
  name          String
  /// 節點描述（必填）
  description   String
  /// Vue 組件名稱
  componentName String?
  /// Vue 組件路徑（選填）
  componentPath String?
  /// 版本號（預設 1.0.0）
  version       String   @default("1.0.0")
  /// API 端點
  apiEndpoint   String?
  /// API 方法
  apiMethod     String?
  /// 預設配置（JSON 字串，選填）
  config        String   @default("{}")
  /// UI 配置（JSON 字串，選填）
  uiConfig      String   @default("{}")
  /// 驗證規則（JSON 字串，選填）
  validation    String   @default("{}")
  /// 連接點配置（JSON 字串）
  handles       String   @default("{}")
  /// 創建時間
  createdAt     DateTime @default(now())
  /// 最後更新時間
  updatedAt     DateTime @updatedAt

  // 關聯
  nodeTemplates NodeTemplate[]
  nodeInstances NodeInstance[]

  @@map("NodeDefinition")
}

model WorkflowTemplate {
  /// 工作流程範本唯一識別碼
  id               String   @id @default(uuid())
  /// 範本名稱
  templateName     String
  /// 範本分類（客訴分析、良率分析等）
  templateCategory String
  /// 範本描述
  description      String?
  /// 版本號
  version          String
  /// 範本狀態（draft、published、deprecated）
  status           String   @default("draft")
  /// 範本配置（JSON字串）
  config           String? // JSON string
  /// 創建者ID
  createdBy        String
  /// 創建時間
  createdAt        DateTime @default(now())
  /// 最後更新時間
  updatedAt        DateTime @updatedAt

  // 關聯
  creator             User                     @relation("CreatedWorkflowTemplates", fields: [createdBy], references: [id])
  nodeTemplates       NodeTemplate[]
  templateConnections NodeTemplateConnection[]
  workflowInstances   WorkflowInstance[]

  @@map("WorkflowTemplate")
}

model NodeTemplate {
  /// 節點範本唯一識別碼
  id                 String   @id @default(uuid())
  /// 所屬工作流程範本ID
  workflowTemplateId String
  /// 節點類型ID
  nodeTypeId         String
  /// 節點名稱
  nodeName           String
  /// X軸座標位置
  positionX          Int
  /// Y軸座標位置
  positionY          Int
  /// 節點配置（JSON字串）
  config             String? // JSON string
  /// 節點樣式（JSON字串）
  style              String? // JSON string
  /// 創建時間
  createdAt          DateTime @default(now())
  /// 最後更新時間
  updatedAt          DateTime @updatedAt

  // 關聯
  workflowTemplate  WorkflowTemplate         @relation(fields: [workflowTemplateId], references: [id])
  nodeType          NodeDefinition           @relation(fields: [nodeTypeId], references: [id])
  sourceConnections NodeTemplateConnection[] @relation("SourceNodeTemplate")
  targetConnections NodeTemplateConnection[] @relation("TargetNodeTemplate")
  nodeInstances     NodeInstance[]

  @@map("NodeTemplate")
}

model NodeTemplateConnection {
  /// 節點連接範本唯一識別碼
  id                 String   @id @default(uuid())
  /// 所屬工作流程範本ID
  workflowTemplateId String
  /// 來源節點ID
  sourceNodeId       String
  /// 目標節點ID
  targetNodeId       String
  /// 連接線類型
  edgeType           String
  /// 連接線標籤
  label              String?
  /// 連接條件（JSON字串）
  condition          String? // JSON string
  /// 連接線樣式（JSON字串）
  style              String? // JSON string
  /// 數據映射配置（JSON字串）
  mappingConfig      String? // JSON string
  /// 創建時間
  createdAt          DateTime @default(now())
  /// 最後更新時間
  updatedAt          DateTime @updatedAt

  // 關聯
  workflowTemplate    WorkflowTemplate         @relation(fields: [workflowTemplateId], references: [id])
  sourceNode          NodeTemplate             @relation("SourceNodeTemplate", fields: [sourceNodeId], references: [id])
  targetNode          NodeTemplate             @relation("TargetNodeTemplate", fields: [targetNodeId], references: [id])
  instanceConnections NodeInstanceConnection[]

  @@map("NodeTemplateConnection")
}

model WorkflowInstance {
  /// 工作流程實例唯一識別碼
  id               String    @id @default(uuid())
  /// 關聯的工作流程範本ID
  templateId       String
  /// 關聯的專案ID
  projectId        String
  /// 實例名稱
  instanceName     String
  /// 執行狀態（draft、running、completed、failed）
  status           String    @default("draft")
  /// 開始執行時間
  startTime        DateTime?
  /// 結束執行時間
  endTime          DateTime?
  /// 發起人ID
  initiator        String
  /// 初始數據（JSON字串）
  initialData      String? // JSON string
  /// 執行上下文（JSON字串）
  executionContext String? // JSON string
  /// 創建時間
  createdAt        DateTime  @default(now())
  /// 最後更新時間
  updatedAt        DateTime  @updatedAt

  // 關聯
  template            WorkflowTemplate         @relation(fields: [templateId], references: [id])
  project             Project                  @relation(fields: [projectId], references: [id])
  creator             User                     @relation("CreatedWorkflowInstances", fields: [initiator], references: [id])
  nodeInstances       NodeInstance[]
  instanceConnections NodeInstanceConnection[]
  fileNodes           FileNode[]

  @@map("WorkflowInstance")
}

model NodeInstance {
  /// 節點實例唯一識別碼
  id                 String    @id @default(uuid())
  /// 所屬工作流程實例ID
  workflowInstanceId String
  /// 關聯的節點範本ID
  nodeTemplateId     String
  /// 關聯的節點定義ID
  nodeDefinitionId   String
  /// 執行狀態（pending、running、completed、failed）
  status             String
  /// 開始執行時間
  startTime          DateTime?
  /// 結束執行時間
  endTime            DateTime?
  /// 重試次數
  retryCount         Int       @default(0)
  /// 錯誤訊息
  errorMessage       String?
  /// 創建時間
  createdAt          DateTime  @default(now())
  /// 最後更新時間
  updatedAt          DateTime  @updatedAt

  // 關聯
  workflowInstance  WorkflowInstance         @relation(fields: [workflowInstanceId], references: [id])
  nodeTemplate      NodeTemplate             @relation(fields: [nodeTemplateId], references: [id])
  nodeDefinition    NodeDefinition           @relation(fields: [nodeDefinitionId], references: [id])
  sourceConnections NodeInstanceConnection[] @relation("SourceNodeInstance")
  targetConnections NodeInstanceConnection[] @relation("TargetNodeInstance")
  dataSnapshots     DataSnapshot[]

  @@map("NodeInstance")
}

model NodeInstanceConnection {
  /// 節點連接實例唯一識別碼
  id                   String    @id @default(uuid())
  /// 所屬工作流程實例ID
  workflowInstanceId   String
  /// 關聯的範本連接ID
  templateConnectionId String
  /// 來源節點實例ID
  sourceNodeId         String
  /// 目標節點實例ID
  targetNodeId         String
  /// 執行狀態（pending、completed、failed）
  status               String
  /// 執行時間
  executedAt           DateTime?
  /// 創建時間
  createdAt            DateTime  @default(now())
  /// 最後更新時間
  updatedAt            DateTime  @updatedAt

  // 關聯
  workflowInstance   WorkflowInstance       @relation(fields: [workflowInstanceId], references: [id])
  templateConnection NodeTemplateConnection @relation(fields: [templateConnectionId], references: [id])
  sourceNode         NodeInstance           @relation("SourceNodeInstance", fields: [sourceNodeId], references: [id])
  targetNode         NodeInstance           @relation("TargetNodeInstance", fields: [targetNodeId], references: [id])

  @@map("NodeInstanceConnection")
}

model DataSnapshot {
  /// 數據快照唯一識別碼
  id             String   @id @default(uuid())
  /// 關聯的節點實例ID
  nodeInstanceId String
  /// 快照類型（input、output、intermediate）
  snapshotType   String
  /// 分析結果（JSON字串）
  analysisResult String? // JSON string
  /// 視覺化配置（JSON字串）
  visualConfig   String? // JSON string
  /// 創建時間
  createdAt      DateTime @default(now())

  // 關聯
  nodeInstance NodeInstance @relation(fields: [nodeInstanceId], references: [id])

  @@map("DataSnapshot")
}

model FileNode {
  /// 檔案節點唯一識別碼
  id                 String   @id @default(uuid())
  /// 所屬工作流程實例ID
  workflowInstanceId String
  /// 檔案名稱
  fileName           String
  /// 原始檔案名稱
  originalName       String
  /// 檔案存儲路徑
  fileUrl            String
  /// 檔案大小（bytes）
  fileSize           Int
  /// 縮圖路徑
  thumbnailPath      String?
  /// 檔案類型（結案報告、不良照片等）
  fileType           String
  /// 檔案狀態（pending、processing、completed、error）
  status             String   @default("pending")
  /// X軸座標位置
  positionX          Int
  /// Y軸座標位置
  positionY          Int
  /// 節點樣式（JSON字串）
  style              String? // JSON string
  /// 檔案描述
  description        String?
  /// 上傳者ID
  uploadedBy         String
  /// 創建時間
  createdAt          DateTime @default(now())
  /// 最後更新時間
  updatedAt          DateTime @updatedAt

  // 關聯
  workflowInstance WorkflowInstance @relation(fields: [workflowInstanceId], references: [id])
  uploader         User             @relation("UploadedFiles", fields: [uploadedBy], references: [id])

  @@map("FileNode")
}

model ApiLog {
  /// API日誌唯一識別碼
  id             String   @id @default(uuid())
  /// 關聯的節點實例ID
  nodeInstanceId String
  /// API端點
  apiEndpoint    String
  /// 請求方法（GET、POST等）
  requestMethod  String
  /// 請求內容（JSON字串）
  requestBody    String? // JSON string
  /// 響應內容（JSON字串）
  responseBody   String? // JSON string
  /// HTTP狀態碼
  statusCode     Int
  /// 執行時間（毫秒）
  executionTime  Int
  /// 創建時間
  createdAt      DateTime @default(now())

  @@map("ApiLog")
}

model SystemCode {
  /// 系統代碼，作為主鍵
  systemCode        String   @id
  /// 系統名稱
  systemName        String
  /// 系統描述
  systemDescription String?
  /// 是否啟用
  isEnabled         Boolean  @default(true)
  /// 創建時間
  createdAt         DateTime @default(now())
  /// 最後更新時間
  updatedAt         DateTime @updatedAt
  /// 創建者ID
  createdBy         String
  /// 最後更新者ID
  updatedBy         String

  // 關聯
  creator User @relation("CreatedSystemCodes", fields: [createdBy], references: [id])
  updater User @relation("UpdatedSystemCodes", fields: [updatedBy], references: [id])

  @@map("SystemCode")
}

model FlowNodeDefinition {
  /// 主鍵
  id            String   @id @default(uuid())
  /// 業務分類
  category      String   @db.VarChar(150)
  /// 節點名稱
  name          String   @db.VarChar(150)
  /// 節點描述
  description   String   @db.VarChar(255)
  /// 節點圖示
  icon          String?  @db.VarChar(50)
  /// Vue 組件名稱
  componentName String   @db.VarChar(150)
  /// Vue 組件路徑（選填）
  componentPath String?  @db.VarChar(150)
  /// 預設配置
  config        Json     @default(dbgenerated("(JSON_OBJECT())"))
  /// UI 配置
  uiConfig      Json     @default(dbgenerated("(JSON_OBJECT())"))
  /// 連接點配置
  handles       Json     @default(dbgenerated("(JSON_OBJECT())"))
  /// 創建時間
  createdAt     DateTime @default(now())
  /// 創建者ID
  createdBy     String?
  /// 最後更新時間
  updatedAt     DateTime @updatedAt
  /// 更新者ID
  updatedBy     String?

  // 關聯
  templates FlowTemplate[]
  creator   User?          @relation("CreatedFlowNodeDefinitions", fields: [createdBy], references: [id])
  updater   User?          @relation("UpdatedFlowNodeDefinitions", fields: [updatedBy], references: [id])

  @@map("FlowNodeDefinition")
}

model FlowTemplate {
  /// 主鍵
  id          String   @id @default(uuid())
  /// 模板名稱
  name        String   @db.VarChar(150)
  /// 模板描述
  description String   @db.VarChar(255)
  /// 模板類型
  type        String   @db.VarChar(50)
  /// 版本號
  version     String   @db.VarChar(20)
  /// 模板狀態（draft、active、deprecated）
  status      String   @default("draft")
  /// 節點定義
  nodes       Json     @default(dbgenerated("(JSON_ARRAY())"))
  /// 邊緣定義
  edges       Json     @default(dbgenerated("(JSON_ARRAY())"))
  /// 模板配置
  metadata    Json?
  /// 縮圖路徑
  thumbnail   String?
  /// 創建者ID
  createdBy   String?
  /// 更新者ID
  updatedBy   String?
  /// 創建時間
  createdAt   DateTime @default(now())
  /// 最後更新時間
  updatedAt   DateTime @updatedAt

  // 關聯
  nodeDefinitions FlowNodeDefinition[]
  instances       FlowInstance[]
  creator         User?                @relation("CreatedFlowTemplates", fields: [createdBy], references: [id])
  updater         User?                @relation("UpdatedFlowTemplates", fields: [updatedBy], references: [id])

  @@map("FlowTemplate")
}

model FlowInstance {
  /// 主鍵
  id         String   @id @default(uuid())
  /// 關聯的專案ID
  projectId  String
  /// 關聯的模板ID
  templateId String
  /// 實例狀態（draft、running、completed、failed）
  status     String   @default("draft")
  /// 工作流上下文
  context    Json     @default(dbgenerated("(JSON_OBJECT())"))
  /// 節點實例狀態
  nodes      Json     @default(dbgenerated("(JSON_ARRAY())"))
  /// 實際執行的邊緣狀態
  edges      Json     @default(dbgenerated("(JSON_ARRAY())"))
  /// 創建者ID
  createdBy  String?
  /// 更新者ID
  updatedBy  String?
  /// 創建時間
  createdAt  DateTime @default(now())
  /// 最後更新時間
  updatedAt  DateTime @updatedAt

  // 關聯
  project   Project        @relation(fields: [projectId], references: [id])
  template  FlowTemplate   @relation(fields: [templateId], references: [id])
  creator   User?          @relation("CreatedFlowInstances", fields: [createdBy], references: [id])
  updater   User?          @relation("UpdatedFlowInstances", fields: [updatedBy], references: [id])
  documents FlowDocument[]

  @@map("FlowInstance")
}

model FlowDocument {
  /// 主鍵
  id         String   @id @default(uuid())
  /// 關聯的專案ID
  projectId  String
  /// 關聯的工作流實例ID
  instanceId String
  /// 關聯的節點ID
  nodeId     String?
  /// 文檔類型（report、image、attachment）
  docType    String
  /// 文檔名稱
  name       String
  /// 存儲路徑
  url        String
  /// 文檔元數據
  metadata   Json?
  /// 創建者ID
  createdBy  String?
  /// 創建時間
  createdAt  DateTime @default(now())

  // 關聯
  project  Project      @relation(fields: [projectId], references: [id])
  instance FlowInstance @relation(fields: [instanceId], references: [id])
  creator  User?        @relation("CreatedFlowDocuments", fields: [createdBy], references: [id])

  @@map("FlowDocument")
}
