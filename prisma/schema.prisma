// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  /// 使用者唯一識別碼
  id        String   @id @default(uuid())
  /// 使用者名稱，用於登入
  username  String   @unique
  /// 電子郵件地址，用於通知和找回密碼
  email     String   @unique
  /// 加密後的密碼
  password  String
  /// 使用者頭像圖片路徑
  avatar    String?
  /// 帳號是否啟用
  isActive  Boolean  @default(true)
  /// 帳號創建時間
  createdAt DateTime @default(now())
  /// 最後更新時間
  updatedAt DateTime @updatedAt

  // RBAC 關聯
  userRoles UserRole[]

  // 專案關聯
  createdProjects Project[] @relation("CreatedProjects")
  updatedProjects Project[] @relation("UpdatedProjects")

  uploadedFiles FileNode[] @relation("UploadedFiles")

  // 新增關聯
  createdFlowNodeDefinitions FlowNodeDefinition[] @relation("CreatedFlowNodeDefinitions")
  updatedFlowNodeDefinitions FlowNodeDefinition[] @relation("UpdatedFlowNodeDefinitions")

  // 新增關聯
  createdSystemCodes SystemCode[] @relation("CreatedSystemCodes")
  updatedSystemCodes SystemCode[] @relation("UpdatedSystemCodes")

  // 新增 Flow 相關關聯
  createdFlowTemplates FlowTemplate[] @relation("CreatedFlowTemplates")
  updatedFlowTemplates FlowTemplate[] @relation("UpdatedFlowTemplates")
  createdFlowInstances FlowInstance[] @relation("CreatedFlowInstances")
  updatedFlowInstances FlowInstance[] @relation("UpdatedFlowInstances")
  createdFlowDocuments FlowDocument[] @relation("CreatedFlowDocuments")

  @@index([email])
  @@map("User")
}

model Permission {
  /// 權限唯一識別碼
  id          String   @id @default(uuid())
  /// 權限名稱，如 CREATE_PROJECT、MANAGE_USERS
  name        String   @unique
  /// 權限描述
  description String?
  /// 創建時間
  createdAt   DateTime @default(now())
  /// 最後更新時間
  updatedAt   DateTime @updatedAt

  // RBAC 關聯
  rolePermissions RolePermission[]

  @@map("Permission")
}

model Role {
  /// 角色唯一識別碼
  id          String   @id @default(uuid())
  /// 角色名稱，如 ADMIN、USER、MANAGER
  name        String   @unique
  /// 角色描述
  description String?
  /// 創建時間
  createdAt   DateTime @default(now())
  /// 最後更新時間
  updatedAt   DateTime @updatedAt

  // RBAC 關聯
  userRoles       UserRole[]
  rolePermissions RolePermission[]

  @@map("Role")
}

model UserRole {
  /// 使用者角色關聯唯一識別碼
  id        String   @id @default(uuid())
  /// 使用者ID
  userId    String
  /// 角色ID
  roleId    String
  /// 創建時間
  createdAt DateTime @default(now())
  /// 最後更新時間
  updatedAt DateTime @updatedAt

  // 關聯
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  role Role @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@unique([userId, roleId])
  @@map("UserRole")
}

model RolePermission {
  /// 角色權限關聯唯一識別碼
  id           String   @id @default(uuid())
  /// 角色ID
  roleId       String
  /// 權限ID
  permissionId String
  /// 創建時間
  createdAt    DateTime @default(now())
  /// 最後更新時間
  updatedAt    DateTime @updatedAt

  // 關聯
  role       Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permission Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)

  @@unique([roleId, permissionId])
  @@map("RolePermission")
}

model Project {
  /// 專案唯一識別碼
  id            String   @id @default(uuid())
  /// 專案編號（自動生成，格式：systemCode_YYYYMMDD_HHMMSS_XXXXX）
  projectNumber String   @unique
  /// 系統代碼
  systemCode    String
  /// 專案名稱
  name          String
  /// 專案描述
  description   String?
  /// 專案狀態（draft、active、completed、archived）
  status        String   @default("draft")
  /// 創建者ID
  createdBy     String
  /// 最後更新者ID
  updatedBy     String
  /// 創建時間
  createdAt     DateTime @default(now())
  /// 最後更新時間
  updatedAt     DateTime @updatedAt

  // 關聯
  creator      User           @relation("CreatedProjects", fields: [createdBy], references: [id])
  updater      User           @relation("UpdatedProjects", fields: [updatedBy], references: [id])
  FlowInstance FlowInstance[]
  FlowDocument FlowDocument[]

  @@map("Project")
}

model DataSnapshot {
  /// 數據快照唯一識別碼
  id             String   @id @default(uuid())
  /// 關聯的節點實例ID
  nodeInstanceId String
  /// 快照類型（input、output、intermediate）
  snapshotType   String
  /// 分析結果（JSON字串）
  analysisResult String? // JSON string
  /// 視覺化配置（JSON字串）
  visualConfig   String? // JSON string
  /// 創建時間
  createdAt      DateTime @default(now())

  @@map("DataSnapshot")
}

model FileNode {
  /// 檔案節點唯一識別碼
  id             String   @id @default(uuid())
  /// 所屬工作流程實例ID
  flowInstanceId String
  /// 檔案名稱
  fileName       String
  /// 原始檔案名稱
  originalName   String
  /// 檔案存儲路徑
  fileUrl        String
  /// 檔案大小（bytes）
  fileSize       Int
  /// 縮圖路徑
  thumbnailPath  String?
  /// 檔案類型（結案報告、不良照片等）
  fileType       String
  /// 檔案狀態（pending、processing、completed、error）
  status         String   @default("pending")
  /// X軸座標位置
  positionX      Int
  /// Y軸座標位置
  positionY      Int
  /// 節點樣式（JSON字串）
  style          String? // JSON string
  /// 檔案描述
  description    String?
  /// 上傳者ID
  uploadedBy     String
  /// 創建時間
  createdAt      DateTime @default(now())
  /// 最後更新時間
  updatedAt      DateTime @updatedAt

  // 關聯
  flowInstance FlowInstance @relation(fields: [flowInstanceId], references: [id])
  uploader     User         @relation("UploadedFiles", fields: [uploadedBy], references: [id])

  @@map("FileNode")
}

model ApiLog {
  /// API日誌唯一識別碼
  id             String   @id @default(uuid())
  /// 關聯的節點實例ID
  nodeInstanceId String
  /// API端點
  apiEndpoint    String
  /// 請求方法（GET、POST等）
  requestMethod  String
  /// 請求內容（JSON字串）
  requestBody    String? // JSON string
  /// 響應內容（JSON字串）
  responseBody   String? // JSON string
  /// HTTP狀態碼
  statusCode     Int
  /// 執行時間（毫秒）
  executionTime  Int
  /// 創建時間
  createdAt      DateTime @default(now())

  @@map("ApiLog")
}

model SystemCode {
  /// 系統代碼，作為主鍵
  systemCode        String   @id
  /// 系統名稱
  systemName        String
  /// 系統描述
  systemDescription String?
  /// 是否啟用
  isEnabled         Boolean  @default(true)
  /// 創建時間
  createdAt         DateTime @default(now())
  /// 最後更新時間
  updatedAt         DateTime @updatedAt
  /// 創建者ID
  createdBy         String
  /// 最後更新者ID
  updatedBy         String

  // 關聯
  creator User @relation("CreatedSystemCodes", fields: [createdBy], references: [id])
  updater User @relation("UpdatedSystemCodes", fields: [updatedBy], references: [id])

  @@map("SystemCode")
}

model FlowNodeDefinition {
  /// 主鍵
  id            String   @id @default(uuid())
  /// 業務分類
  category      String   @db.VarChar(150)
  /// 節點名稱
  name          String   @db.VarChar(150)
  /// 節點描述
  description   String   @db.VarChar(255)
  /// 節點圖示
  icon          String?  @db.VarChar(50)
  /// Vue 組件名稱
  componentName String   @db.VarChar(150)
  /// Vue 組件路徑（選填）
  componentPath String?  @db.VarChar(150)
  /// 預設配置
  config        Json     @default(dbgenerated("(JSON_OBJECT())"))
  /// UI 配置
  uiConfig      Json     @default(dbgenerated("(JSON_OBJECT())"))
  /// 連接點配置
  handles       Json     @default(dbgenerated("(JSON_OBJECT())"))
  /// 創建時間
  createdAt     DateTime @default(now())
  /// 創建者ID
  createdBy     String?
  /// 最後更新時間
  updatedAt     DateTime @updatedAt
  /// 更新者ID
  updatedBy     String?

  // 關聯
  templates FlowTemplate[]
  creator   User?          @relation("CreatedFlowNodeDefinitions", fields: [createdBy], references: [id])
  updater   User?          @relation("UpdatedFlowNodeDefinitions", fields: [updatedBy], references: [id])

  @@map("FlowNodeDefinition")
}

model FlowTemplate {
  /// 主鍵
  id          String   @id @default(uuid())
  /// 模板名稱
  name        String   @db.VarChar(150)
  /// 模板描述
  description String   @db.VarChar(255)
  /// 模板類型
  type        String   @db.VarChar(50)
  /// 版本號
  version     String   @db.VarChar(20)
  /// 模板狀態（draft、active、deprecated）
  status      String   @default("draft")
  /// 節點定義
  nodes       Json     @default(dbgenerated("(JSON_ARRAY())"))
  /// 邊緣定義
  edges       Json     @default(dbgenerated("(JSON_ARRAY())"))
  /// 模板配置
  metadata    Json?
  /// 縮圖路徑
  thumbnail   String?  @db.MediumText
  /// 創建者ID
  createdBy   String?
  /// 更新者ID
  updatedBy   String?
  /// 創建時間
  createdAt   DateTime @default(now())
  /// 最後更新時間
  updatedAt   DateTime @updatedAt

  // 關聯
  nodeDefinitions FlowNodeDefinition[]
  instances       FlowInstance[]
  creator         User?                @relation("CreatedFlowTemplates", fields: [createdBy], references: [id])
  updater         User?                @relation("UpdatedFlowTemplates", fields: [updatedBy], references: [id])

  @@map("FlowTemplate")
}

/// 工作流程實例
model FlowInstance {
  /// 流程實例唯一識別碼
  id String @id @default(uuid())

  /// 關聯的專案ID
  projectId  String
  /// 關聯的模板ID
  templateId String

  /// 實例狀態 (draft, running, paused, completed, failed, stopped)
  status String @default("draft")

  /// 節點定義（包含位置、配置等）
  /// 示例：
  /// {
  ///   id: string          // 節點唯一識別碼
  ///   type: string        // 節點類型
  ///   position: {x, y}    // 節點位置
  ///   data: {            // 節點數據
  ///     label: string     // 節點標籤
  ///     config: object    // 節點配置
  ///   }
  /// }[]
  nodes Json @default(dbgenerated("(JSON_ARRAY())"))

  /// 連線定義
  /// 示例：
  /// {
  ///   id: string          // 連線唯一識別碼
  ///   source: string      // 來源節點ID
  ///   target: string      // 目標節點ID
  ///   sourceHandle: string // 來源連接點
  ///   targetHandle: string // 目標連接點
  /// }[]
  edges Json @default(dbgenerated("(JSON_ARRAY())"))

  /// 執行上下文（存儲節點間的數據傳遞）
  /// 示例：
  /// {
  ///   [nodeId: string]: {
  ///     input: any        // 節點輸入數據
  ///     output: any       // 節點輸出數據
  ///     startTime: string // 開始時間
  ///     endTime: string   // 結束時間
  ///   }
  /// }
  context Json @default(dbgenerated("(JSON_OBJECT())"))

  /// 節點數據（存儲每個節點的配置和狀態）
  /// 示例：
  /// {
  ///   [nodeId: string]: {
  ///     type: string      // 節點類型
  ///     label: string     // 節點標籤
  ///     config: object    // 節點配置
  ///     complaintId: string // 客訴單號
  ///     complaintDetail: object // 客訴詳情
  ///   }
  /// }
  nodeData Json? @default(dbgenerated("(JSON_OBJECT())"))

  /// 節點上下文（存儲節點執行結果）
  /// 示例：
  /// {
  ///   [nodeId: string]: {
  ///     input: any        // 節點輸入數據
  ///     output: any       // 節點輸出數據
  ///     executionTime: number // 執行時間（秒）
  ///   }
  /// }
  nodeContext Json? @default(dbgenerated("(JSON_OBJECT())"))

  /// 節點狀態（記錄每個節點的執行狀態）
  /// 示例：
  /// {
  ///   [nodeId: string]: {
  ///     status: string    // idle, running, completed, failed
  ///     startTime: string // 開始時間
  ///     endTime: string   // 結束時間
  ///     error: string     // 錯誤信息
  ///   }
  /// }
  nodeStates Json? @default(dbgenerated("(JSON_OBJECT())"))

  /// 執行日誌
  /// 示例：
  /// {
  ///   type: string        // SYSTEM, NODE, ERROR
  ///   nodeId?: string     // 相關節點ID
  ///   message: string     // 日誌信息
  ///   timestamp: string   // 時間戳
  ///   data?: any         // 額外數據
  /// }[]
  logs Json? @default(dbgenerated("(JSON_ARRAY())"))

  /// 最後執行的節點ID（用於恢復執行）!TODO: 備著，應該用不上
  lastNodeId String?

  /// 錯誤信息（當 status 為 failed 時）
  error String?

  /// 開始執行時間
  startedAt DateTime?
  /// 完成時間
  endedAt   DateTime?
  /// 暫停時間
  pausedAt  DateTime?

  /// 創建者ID
  createdBy String
  /// 更新者ID
  updatedBy String
  /// 創建時間
  createdAt DateTime @default(now())
  /// 更新時間
  updatedAt DateTime @updatedAt

  // 關聯
  project   Project        @relation(fields: [projectId], references: [id])
  template  FlowTemplate   @relation(fields: [templateId], references: [id])
  fileNodes FileNode[]
  creator   User           @relation("CreatedFlowInstances", fields: [createdBy], references: [id])
  updater   User           @relation("UpdatedFlowInstances", fields: [updatedBy], references: [id])
  documents FlowDocument[]

  @@index([projectId])
  @@index([templateId])
  @@index([status])
  @@index([createdBy])
  @@map("FlowInstance")
}

model FlowDocument {
  /// 主鍵
  id         String   @id @default(uuid())
  /// 關聯的專案ID
  projectId  String
  /// 關聯的工作流實例ID
  instanceId String
  /// 關聯的節點ID
  nodeId     String?
  /// 文檔類型（report、image、attachment）
  docType    String
  /// 文檔名稱
  name       String
  /// 存儲路徑
  url        String
  /// 文檔元數據
  metadata   Json?
  /// 創建者ID
  createdBy  String?
  /// 創建時間
  createdAt  DateTime @default(now())

  // 關聯
  project  Project      @relation(fields: [projectId], references: [id])
  instance FlowInstance @relation(fields: [instanceId], references: [id])
  creator  User?        @relation("CreatedFlowDocuments", fields: [createdBy], references: [id])

  @@map("FlowDocument")
}
